<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    	
   	<!-- auto scan beans -->
	<context:annotation-config />

	<!-- 默认扫描的包路径 -->
	<context:component-scan base-package="com">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

   <context:property-placeholder system-properties-mode="OVERRIDE"
                                  location="classpath*:conf/jdbc.properties"/>


    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties"
                  ref="hibernatePropertiesBean"/>
        <property name="configLocations"
                  value="classpath*:conf/**/hibcnf.xml"/>
    </bean>

    <bean id="hibernatePropertiesBean"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:conf/hibernate.properties"/>
    </bean>

    <bean id="simpleJdbcTemplate"
          class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg type="javax.sql.DataSource"
                         ref="dataSource"/>
    </bean>
	
	<!--
     <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">      
         <property name="jndiName" value="java:comp/env/jdbc/platform"/>      
     </bean>  
	 -->
	 
   <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>	
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="minPoolSize" value="${c3p0.minPoolSize}"/>	
		<property name="maxPoolSize" value="${c3p0_oa.maxPoolSize}"/>	
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>			
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>		
		<property name="maxStatements" value="${c3p0.maxStatements}"/>		
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>	
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}"/>	
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>	
		<property name="breakAfterAcquireFailure" value="${c3p0.breakAfterAcquireFailure}"/>		
		<property name="testConnectionOnCheckout" value="${c3p0.testConnectionOnCheckout}"/>	
		<property name="numHelperThreads" value="${c3p0.numHelperThreads}"/>
    </bean>

   
		  
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"><ref bean="dataSource"/></property>
    </bean>
	
    <bean id="hibernateTemplate"
          class="org.springframework.orm.hibernate3.HibernateTemplate"
          autowire="byType"/> 

    <bean id="persistence.transactionManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
	    <!-- 用注解来实现事务管理 -->   
  <tx:annotation-driven transaction-manager="persistence.transactionManager"/>   
   	
 
  

</beans>